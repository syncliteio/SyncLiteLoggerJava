<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>io.synclite</groupId>
	<artifactId>synclite-logger</artifactId>
	<version>2024.04.08</version>
	<name>SyncLite Logger</name>
	<description>SyncLite logger for Java applications</description>
	<url>https://github.com/syncliteio/SyncLiteLoggerJava</url>
	<licenses>
		<license>
			<name>Apache License Version 2.0</name>
			<url>http://www.apache.org/licenses/</url>
		</license>
	</licenses>
	<developers>
		<developer>
			<name>Mahendra Chavan</name>
			<email>mahendra.chavan@synclite.io</email>
			<organization>SyncLite Systems Private Limited</organization>
			<organizationUrl>www.synclite.io</organizationUrl>
		</developer>
	</developers>
	<scm>
		<connection>scm:git:git://github.com/syncliteio/SyncLiteLoggerJava.git</connection>
		<developerConnection>scm:git:ssh://github.com/syncliteio/SyncLiteLoggerJava.git</developerConnection>
		<url>https://github.com/syncliteio/SyncLiteLoggerJava/tree/main</url>
	</scm>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
	</properties>
	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.2</version>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<!-- configure the plugin here -->
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<appendAssemblyId>false</appendAssemblyId>
							<descriptorRefs>
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.2.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>package</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.3.1</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<configuration>
							<!-- Include an empty source directory to satisfy the plugin -->
							<sourcepath>${project.basedir}/src/main/java</sourcepath>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Copy the existing JAR during the package phase -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>copy-existing-jar</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>cp</executable> <!-- or use 'copy' for Windows -->
							<arguments>
								<argument>${project.basedir}/src/main/resources/${project.build.finalName}.jar</argument>
								<argument>${project.build.directory}/${project.build.finalName}.jar</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>copy-dummy-javadoc</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>cp</executable> <!-- or use 'copy' for Windows -->
							<arguments>
								<argument>${project.basedir}/src/main/resources/README.txt</argument>
								<argument>${project.build.directory}/${project.build.finalName}-javadoc.jar</argument>
							</arguments>
						</configuration>
					</execution>
					<execution>
						<id>copy-dummy-sources</id>
						<phase>package</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>cp</executable> <!-- or use 'copy' for Windows -->
							<arguments>
								<argument>${project.basedir}/src/main/resources/README.txt</argument>
								<argument>${project.build.directory}/${project.build.finalName}-sources.jar</argument>
							</arguments>
						</configuration>
					</execution>

				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-gpg-plugin</artifactId>
				<version>1.5</version>
				<executions>
					<!-- Sign the main artifact -->
					<execution>
						<id>sign-main-artifact</id>
						<phase>verify</phase>
						<goals>
							<goal>sign</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.sonatype.plugins</groupId>
				<artifactId>nexus-staging-maven-plugin</artifactId>
				<version>1.6.7</version>
				<extensions>true</extensions>
				<configuration>
					<serverId>ossrh</serverId>
					<nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
					<autoReleaseAfterClose>true</autoReleaseAfterClose>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
